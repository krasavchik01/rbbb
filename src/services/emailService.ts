// Email —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export interface EmailConfig {
  host: string;
  port: number;
  secure: boolean;
  auth: {
    user: string;
    pass: string;
  };
}

export interface EmailMessage {
  to: string;
  subject: string;
  text: string;
  html?: string;
}

class EmailService {
  private config: EmailConfig | null = null;

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ email —Å–µ—Ä–≤–µ—Ä–∞
  setConfig(config: EmailConfig) {
    this.config = config;
    localStorage.setItem('rb_email_config', JSON.stringify(config));
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ localStorage
  loadConfig() {
    const saved = localStorage.getItem('rb_email_config');
    if (saved) {
      this.config = JSON.parse(saved);
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ email (–∏–º–∏—Ç–∞—Ü–∏—è)
  async sendEmail(message: EmailMessage): Promise<boolean> {
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
      await new Promise(resolve => setTimeout(resolve, 1000));

      if (!this.config) {
        throw new Error('Email —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }

      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ SMTP
      console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ email:', {
        to: message.to,
        subject: message.subject,
        config: this.config
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
      const sentEmails = JSON.parse(localStorage.getItem('rb_sent_emails') || '[]');
      sentEmails.push({
        ...message,
        sentAt: new Date().toISOString(),
        status: 'sent'
      });
      localStorage.setItem('rb_sent_emails', JSON.stringify(sentEmails));

      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
      return false;
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ø—Ä–æ–µ–∫—Ç–µ
  async sendProjectNotification(projectName: string, managerEmail: string) {
    const message: EmailMessage = {
      to: managerEmail,
      subject: `–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: ${projectName}`,
      text: `–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç "${projectName}". –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #3b82f6;">–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω</h2>
          <p>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: <strong>${projectName}</strong></p>
          <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ RB Partners Suite.</p>
          <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px;">
            <p style="margin: 0; color: #6b7280;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç RB Partners Suite</p>
          </div>
        </div>
      `
    };

    return await this.sendEmail(message);
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ
  async sendTaskNotification(taskTitle: string, assigneeEmail: string) {
    const message: EmailMessage = {
      to: assigneeEmail,
      subject: `–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞: ${taskTitle}`,
      text: `–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ "${taskTitle}". –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #10b981;">–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞</h2>
          <p>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞: <strong>${taskTitle}</strong></p>
          <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–µ RB Partners Suite.</p>
          <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px;">
            <p style="margin: 0; color: #6b7280;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç RB Partners Suite</p>
          </div>
        </div>
      `
    };

    return await this.sendEmail(message);
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ
  async sendEmployeeNotification(employeeName: string, hrEmail: string) {
    const message: EmailMessage = {
      to: hrEmail,
      subject: `–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: ${employeeName}`,
      text: `–í —Å–∏—Å—Ç–µ–º—É –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ "${employeeName}". –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –≤ HR —Ä–∞–∑–¥–µ–ª–µ.`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #8b5cf6;">–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω</h2>
          <p>–í —Å–∏—Å—Ç–µ–º—É –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: <strong>${employeeName}</strong></p>
          <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ HR —Ä–∞–∑–¥–µ–ª–µ —Å–∏—Å—Ç–µ–º—ã.</p>
          <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px;">
            <p style="margin: 0; color: #6b7280;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç RB Partners Suite</p>
          </div>
        </div>
      `
    };

    return await this.sendEmail(message);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
  getSentEmails() {
    return JSON.parse(localStorage.getItem('rb_sent_emails') || '[]');
  }

  // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
  clearHistory() {
    localStorage.removeItem('rb_sent_emails');
  }
}

export const emailService = new EmailService();
